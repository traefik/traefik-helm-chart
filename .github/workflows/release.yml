name: Release Charts

on:
  push:
    branches:
      - master

env:
  tag_prefix: v
  crds_tag_prefix: crds_v

jobs:
  traefik:
    needs: [ traefik-crds ]
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config --global --add safe.directory /charts

      - name: Copy LICENSE, EXAMPLES.md and README.md for packaging
        run: |
          cp ./README.md ./traefik/README.md
          cp ./EXAMPLES.md ./traefik/EXAMPLES.md
          cp ./LICENSE ./traefik/LICENSE

      - name: Generate default static install
        run: |
          kustomize build traefik-crds > traefik.yaml
          helm template traefik ./traefik -n traefik >> traefik.yaml

      - name: Get chart version
        id: chart_version
        run: |
          echo "CHART_VERSION=$(cat traefik/Chart.yaml | awk -F"[ ',]+" '/version:/{print $2}' | head -n 1)" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: tag_exists
        run: |
          TAG_EXISTS=false
          if git tag -l | grep '^${{ env.tag_prefix }}${{ steps.chart_version.outputs.CHART_VERSION }}$' > /dev/null ; then
              TAG_EXISTS=true
          fi
          echo TAG_EXISTS=$TAG_EXISTS >> $GITHUB_OUTPUT

      - name: Get Previous tag
        id: previous_tag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          prefix: v
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

      - name: Tag release
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.chart_version.outputs.CHART_VERSION }}
          tag_prefix: ${{ env.tag_prefix }}
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

      - name: Render changelog configuration
        env:
          REGEXP: '(\\(.+\\)|(?!\\(CRDs-.+\\)))'
        run: |
          export DATE=$(date +%F); cat .github/workflows/changelog.json | envsubst > /tmp/changelog.json; cat /tmp/changelog.json
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

      - name: Build Changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          fromTag: ${{ steps.previous_tag.outputs.tag }}
          toTag: ${{ steps.tag_version.outputs.new_tag }}
          configuration: "/tmp/changelog.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.changelog.outputs.changelog }}
          prerelease: ${{ contains(steps.chart_version.outputs.CHART_VERSION, '-') }}
          artifacts: "traefik.yaml"
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

      # avoid to push both charts
      - name: Delete traefik-crds chart
        run: |
          rm -rf traefik-crds
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        id: gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

      - name: Prepare GPG key
        run: |
          gpg --export > ~/.gnupg/pubring.gpg
          gpg --batch --pinentry-mode loopback --yes --passphrase '${{ secrets.GPG_PASSPHRASE }}' --export-secret-key > ~/.gnupg/secring.gpg
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

      - name: Publish Helm chart
        uses: bpsoraggi/helm-gh-pages@2a2569e394590687d2c508516af3c9bb9fe7fa7e
        with:
          token: ${{ secrets.CHARTS_TOKEN }}
          charts_dir: .
          charts_url: https://traefik.github.io/charts
          owner: traefik
          repository: charts
          branch: master
          target_dir: traefik
          index_dir: .
          commit_username: traefiker
          commit_email: 30906710+traefiker@users.noreply.github.com
          key: ${{ steps.gpg.outputs.name }}
          private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

      - name: Publish Helm chart to the ghcr.io registry
        uses: appany/helm-oci-chart-releaser@v0.5.0
        with:
          name: traefik
          repository: traefik/helm
          tag: ${{ steps.chart_version.outputs.CHART_VERSION }}
          path: ./traefik
          registry: ghcr.io
          registry_username: traefiker
          registry_password: ${{ secrets.GHCR_TOKEN }}
          sign: true
          signing_key: ${{ steps.gpg.outputs.name }}
          signing_passphrase: ${{ secrets.GPG_PASSPHRASE }}
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

      - name: Trigger hub-doc synchronization workflow
        env:
          GH_TOKEN: ${{ secrets.GHCR_TOKEN }}
        run: |
          gh workflow run -R traefik/hub-doc "🏗️ Sync helm-chart" -F CHART_VERSION=${{ steps.tag_version.outputs.new_tag }}
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

  traefik-crds:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git config --global --add safe.directory /charts

      - name: Copy LICENSE for packaging
        run: |
          cp ./LICENSE ./traefik/LICENSE

      - name: Get chart version
        id: chart_version
        run: |
          echo "CHART_VERSION=$(cat traefik-crds/Chart.yaml | awk -F"[ ',]+" '/version:/{print $2}' | head -n 1)" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: tag_exists
        run: |
          TAG_EXISTS=false
          if git tag -l | grep '^${{ env.crds_tag_prefix }}${{ steps.chart_version.outputs.CHART_VERSION }}$' > /dev/null ; then
              TAG_EXISTS=true
          fi
          echo TAG_EXISTS=$TAG_EXISTS >> $GITHUB_OUTPUT

      - name: Get Previous tag
        id: previous_tag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          prefix: crds_v
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

      - name: Tag release
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.chart_version.outputs.CHART_VERSION }}
          tag_prefix: ${{ env.crds_tag_prefix }}
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

      - name: Render changelog configuration
        env:
          REGEXP: '\\((CRDs|CRDs-.+)\\)'
        run: |
          export DATE=$(date +%F); cat .github/workflows/changelog.json | envsubst > /tmp/changelog.json; cat /tmp/changelog.json
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

      - name: Build Changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          fromTag: ${{ steps.previous_tag.outputs.tag }}
          toTag: ${{ steps.tag_version.outputs.new_tag }}
          configuration: "/tmp/changelog.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.changelog.outputs.changelog }}
          prerelease: ${{ contains(steps.chart_version.outputs.CHART_VERSION, '-') }}
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

      # avoid to push both charts
      - name: Delete traefik chart
        run: |
          rm -rf traefik
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        id: gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

      - name: Prepare GPG key
        run: |
          gpg --export > ~/.gnupg/pubring.gpg
          gpg --batch --pinentry-mode loopback --yes --passphrase '${{ secrets.GPG_PASSPHRASE }}' --export-secret-key > ~/.gnupg/secring.gpg
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

      - name: Publish Helm chart
        uses: bpsoraggi/helm-gh-pages@2a2569e394590687d2c508516af3c9bb9fe7fa7e
        with:
          token: ${{ secrets.CHARTS_TOKEN }}
          charts_dir: .
          charts_url: https://traefik.github.io/charts
          owner: traefik
          repository: charts
          branch: master
          target_dir: traefik-crds
          index_dir: .
          commit_username: traefiker
          commit_email: 30906710+traefiker@users.noreply.github.com
          key: ${{ steps.gpg.outputs.name }}
          private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

      - name: Publish Helm chart to the ghcr.io registry
        uses: appany/helm-oci-chart-releaser@v0.5.0
        with:
          name: traefik-crds
          repository: traefik/helm
          tag: ${{ steps.chart_version.outputs.CHART_VERSION }}
          path: ./traefik-crds
          registry: ghcr.io
          registry_username: traefiker
          registry_password: ${{ secrets.GHCR_TOKEN }}
          sign: true
          signing_key: ${{ steps.gpg.outputs.name }}
          signing_passphrase: ${{ secrets.GPG_PASSPHRASE }}
        if: steps.tag_exists.outputs.TAG_EXISTS == 'false'

